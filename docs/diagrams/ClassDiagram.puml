@startuml
package com.ameerdev {

    package resource {
        class CreateLibrary {
            name: String
            description: String
            readDirection: ReadDirection
            libraryType: BookType
        }
        class LibraryResource {
            libraryService: LibraryService
            + createNewLibrary(library: CreateLibrary)
            + scanLibrary(libraryId: int)
            + deleteLibrary(libraryId: int)
        }
        CreateLibrary .. LibraryResource
        class SeriesResource {
            + getAllSeries(libraryId: int, page: int, pageSize: int)
            + refreshMetadata(seriesId: int)
        }
        class ReleaseResource {
            + refreshMetadata(releaseId: int)
        }
    }
    package service {
        class LibraryService {
        }
        class SeriesService {
        }
        class ReleaseService {
        }
    }

    resource.LibraryResource .. service.LibraryService
    resource.SeriesResource .. service.SeriesService
    resource.ReleaseResource .. service.ReleaseService

    resource.CreateLibrary o- model.BookType
    resource.CreateLibrary o- model.ReadDirection

    package model {
        enum BookType {
            +<u>MANGA</u>
            +<u>COMIC</u>
            - BookType(readDirection: ReadDirection)
            + defaultReadDirection: ReadDirection
        }

        enum ReadDirection {
            +<u>RIGHT_TO_LEFT</u>
            +<u>LEFT_TO_RIGHT</u>
            +<u>DEFAULT</u>
        }

        package media {
            class Library {
                - id: int
                - name: String
                - description: String
                - readDirection: ReadDirection
                - libraryType: BookType
                - paths: List<Path>
                - series: Set<Series>
                + getName(): String
                + getDescription(): String
                + getLibraryType(): String
                + getReadDirection(): ReadDirection
                + getLibraryType(): BookType

                + setName(): void
                + setDescription(): void
                + setLibraryType(): void
                + setReadDirection(): void
                + setLibraryType(): void

                + querySeries(): Set<Series>
                + queryPaths(): List<Path>
                + getOrQueryPaths(): List<Path>
            }

            Library o-- BookType
            Library o- ReadDirection
            BookType o- ReadDirection

            ' Database backed
            class Series {
                - id: int
                - libraryId: int
                - metadataId: int
                - path: Path
                + getId(): int
                + getLibraryId: int
                + getPath: Path
            }

            ' Database backed
            class Release {
                - id: int
                - seriesId: int
                - metadataId: int
                - path: String
                - releaseType: ReleaseType
                - pages: List<Page>
                + loadOrGetPages(): List<Page>
                + reloadPages(): List<Page>
                - loadPagesFromFileSystem(): List<Page>
                + getId(): int
                + getSeriesId(): int
            }

            class SeriesMetadata {
                - title: String
                - author: String
                - description: String
                - releaseDate: Date
                + SeriesMetadata(jsonData: String)
                + getTitle(): String
                + getAuthor(): String
                + getDescription(): String
                + getReleaseDate(): Date
            }

            Series "1" .. "1" SeriesMetadata

            class ReleaseMetadata {
                - title: String
                - index: int
                + getTitle(): String
                + getIndex(): int
                + setTitle(): String
                + setIndex(): int
            }

            Release "1" .. "1" ReleaseMetadata

            enum ReleaseType {
                CHAPTER
                VOLUME
                ISSUE
                SPECIAL
                ONE_SHOT
            }

            Release o-- ReleaseType

            class Page {
                - pageNumber: int
            }

            Series "1" .. "1..*" Release
            Release "1" .. "1..*" Page

            package repositories {
                class SeriesRepository {
                }
                class ReleaseRepository {
                }
                class LibraryRepository {
                }
            }
        }
    }


' Information gathered from external sources about the series and Releases
    package metadata_agent {

        class MetadataAgentFactory {
            - metadataAgent: MetadataAgent
            + getAgentInstance(libraryType: LibraryType): MetadataAgent
        }

        interface MetadataAgent {
            - metadataType: BookType
            - metadataSourceApiUrl: Optional<String>
            + searchByName(name: String): Optional<String>
            + fetchSeriesMetadata(metadataSeriesId: String): Optional<SeriesMetadata>
            + fetchReleaseMetadata(metadataSeriesId: String, index: String): Optional<ReleaseMetadata>
        }

        MetadataAgentFactory .. MetadataAgent

        package mangaupdates {
            package client {
                class SeriesApi{
                }
            }
            class MangaUpdatesMetadataAgent implements com.ameerdev.metadata_agent.MetadataAgent {
                seriesApi: SeriesApi (injected)
            }
            client.SeriesApi . MangaUpdatesMetadataAgent
        }

        package comicvine {
            package client {
            }
            class ComicVineMetadataAgent implements com.ameerdev.metadata_agent.MetadataAgent {
                seriesApi: SeriesApi (injected)
            }
            client.SeriesApi . ComicVineMetadataAgent
        }

        MetadataAgent .. com.ameerdev.model.media.SeriesMetadata
        MetadataAgent .. com.ameerdev.model.media.ReleaseMetadata
    }

    model.media.Library "1" -- "0..*" model.media.Series
}
@enduml